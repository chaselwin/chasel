package com.chasel.family.controller;

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;

import javax.validation.Valid;

import org.json.JSONObject;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

import com.chasel.common.constant.BaseController;
import com.chasel.common.service.IMinioService;
import com.chasel.family.service.IImageService;
import com.chasel.family.vo.Image;
import com.github.pagehelper.PageInfo;

@RestController
@RequestMapping("/image")
public class ImageController extends BaseController {

	@Autowired
	private IImageService imageService;

	@Autowired
	private IMinioService minioService;

	/**
	 * 分页查询
	 * 
	 * @return
	 */
	@RequestMapping(path = "/list/page/{pageSize}/{pageNum}", method = RequestMethod.POST, produces = "application/json")
	public @ResponseBody PageInfo<?> listPage(@RequestBody Image image, PageInfo<Image> pageInfo) {

		return doQuery(() -> {
			return imageService.listPage(image, pageInfo);
		});
	}

	@RequestMapping(path = "/findAll", method = RequestMethod.POST, produces = "application/json")
	public @ResponseBody List<Image> frontAll() {
		List<Image> list = imageService.findAll(null);
		List<Image> imageList = new ArrayList<Image>();
		for (Image image : list) {
			String imageName = image.getName();
			image.setName(minioService.getUrl(imageName));
			imageList.add(image);
		}
		return imageList;
	}

	/**
	 * 添加照片
	 * 
	 * @param image
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(path = "/add", method = RequestMethod.POST, produces = "application/json")
	public @ResponseBody String save(@RequestParam(value = "type") String type,
			@RequestParam(value = "creator") String creator, @RequestParam(value = "memo") String memo,
			@RequestParam(value = "title") String title, @RequestParam(value = "file") MultipartFile file)
			throws Exception {
		if (file != null) {
			if (file.getSize() >= 5242880) {
				return new JSONObject().put("message", "请选择小于5M的图片").toString();
			} else {
				minioService.upload(file);
				Image image = new Image();
				image.setName(file.getOriginalFilename());
				image.setType(type);
				image.setTitle(title);
				image.setMemo(memo);
				image.setCreator(creator);
				image.setCreateTime(new Timestamp(System.currentTimeMillis()));
				imageService.save(image);
				return new JSONObject().put("message", "upload image success").toString();
			}
		} else {
			return new JSONObject().put("message", "please select an image").toString();
		}
	}

	@RequestMapping(path = "/delete/{id}", method = RequestMethod.DELETE, produces = "application/json")
	public @ResponseBody String delete(@PathVariable @Validated @Valid int id) {
		if (imageService.findById(id) == null) {
			return "{\"message\":\"the id '" + id + "' is not exist.\"}";
		} else {
			Image image = imageService.findById(id);
			minioService.remove(image.getName());
			imageService.delete(id);
			return "{\"message\":\"delete image success\"}";
		}
	}

	/**
	 * 编辑照片
	 * 
	 * @param image
	 * @return
	 */
	@RequestMapping(path = "/update", method = RequestMethod.PUT, produces = "application/json")
	public @ResponseBody String update(@RequestBody @Validated @Valid Image image) {
		if (imageService.findById(image.getId()) == null) {
			return "{\"message\":\"the image is not exist.\"}";
		} else {
			imageService.update(image);
			return "{\"message\":\"update success\"}";
		}
	}

}
